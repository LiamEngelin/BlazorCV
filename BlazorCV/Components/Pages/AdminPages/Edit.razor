@page "/admin/edit"
@inject NavigationManager NavigationManager
@inject HttpClient http

<h3 style="z-index: 2; position: absolute; color: white; transform: translateX(-50%); left: 50%; top: 15%;">Create Project</h3>
<div class="container-fluid" style="z-index:200;">
    <EditForm Model="newProject" OnValidSubmit="() => UpdateProject(newProject)">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label for="projectName">Name</label>
            <InputNumber id="ProjectId" class="form-control"
                       @bind-Value="newProject.Id" />
        </div>

        <div class="form-group">
            <label for="projectName">Name</label>
            <InputText id="projectName" class="form-control"
            @bind-Value="newProject.Name" />
        </div>

        <div class="form-group">
            <label for="projectDescription">Description</label>
            <InputText id="projectDescription" class="form-control" rows="5"
            @bind-Value="newProject.Description" />
        </div>

        <button type="submit" class="btn btn-primary">
            Create Project
        </button>
    </EditForm>
</div>

@code {

    private Project newProject = new Project();

    protected override void OnInitialized()
    {
       

    }
     

    private async Task UpdateProject(Project updatedProject)
    {
        var response = await http.PutAsJsonAsync($"https://blazorcv-api-cmf3g6h8ffb7emdc.swedencentral-01.azurewebsites.net/api/project/{newProject.Id}", updatedProject);

        if (response.IsSuccessStatusCode)
        {
            newProject.Name = "";
            newProject.Description = "";
            StateHasChanged();
            Console.WriteLine("project updated:" + newProject.Name);
        }
        else
        {
            StateHasChanged();
            Console.WriteLine("Error updating project: " + response.StatusCode);
        }
        
    }
}