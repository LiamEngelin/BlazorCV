@page "/admin/delete"
@inject ProjectService ProjectService
@inject SkillService SkillService
@rendermode InteractiveServer

<h3 class="admin-header">Ta bort Project eller Skill</h3>

<div class="formDiv">
    <form onsubmit="return false">
        <div class="form-group">
            <label>Typ</label>
            <select class="form-control" @bind="selectedType">
                <option value="project">Project</option>
                <option value="skill">Skill</option>
            </select>
        </div>

        <InputNumber class="form-control mt-2" placeholder="ID att ta bort" @bind-Value="itemId" />
        <button class="btn btn-danger mt-3" type="button" @onclick="DeleteItem">Ta bort</button>

        @if (!string.IsNullOrEmpty(statusMessage))
        {
            <div class="alert mt-3">@statusMessage</div>
        }
    </form>
</div>

@code {
    private string selectedType = "project";
    private int itemId;
    private string statusMessage = "";

    private async Task DeleteItem()
    {
        statusMessage = "";

        try
        {
            bool success;

            if (selectedType == "project")
                success = await ProjectService.RemoveProject(itemId);
            else
                success = await SkillService.RemoveSkill(itemId);

            statusMessage = success
                ? $"{selectedType.ToUpper()} med ID {itemId} togs bort."
                : $"{selectedType.ToUpper()} hittades inte eller kunde inte tas bort.";
        }
        catch (Exception ex)
        {
            statusMessage = $"Fel: {ex.Message}";
        }
    }
}